@page "/claims"
@using BlazorSelfHostedAuthWithSignalr.Client.Extensions
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Security.Claims

@attribute [Authorize]
<PageTitle>IdentityClaimsPage</PageTitle>
<h3>ClaimsPrincipal Data</h3>
<a href=@($"dashboard/{userId}")>User Dashboard</a>
<table class="table">
    <thead>
        <tr>
            <th>Type</th>
            <th>Value</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var claim in claims)
        {
            <tr>
                <td>@claim.Type</td>
                <td>@claim.Value</td>
            </tr>
        }
    </tbody>
</table>
@code {
    private string authMessage = default!;
    private string userId = default!;
    private IEnumerable<Claim> claims = Enumerable.Empty<Claim>();

    [Inject]
    private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = default!;

    protected override async Task OnParametersSetAsync()
    {
        await GetClaimsPrincipalData();
        await base.OnParametersSetAsync();
    }
    private async Task GetClaimsPrincipalData()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity!.IsAuthenticated)
        {
            authMessage = $"{user.Identity.Name} is authenticated.";
            claims = user.Claims;
            userId = user.FindFirstValue("sub")!;
        }
        else
        {
            authMessage = "The user is NOT authenticated.";
        }
    }


}
